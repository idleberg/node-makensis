name: CI:Wine

on: [push]

jobs:
  default:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        node-version: ['12', '14', '16']
        os: [macos-10.15, ubuntu-latest]

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 10

    - name: Install Wine (macOS)
      if: matrix.os == 'macos-10.15'
      run: |
        brew update
        brew tap gcenx/wine
        brew install --cask --no-quarantine gcenx/wine/wine-crossover
        WINEARCH=win32 WINEPREFIX=~/.wine32 winecfg

    - name: Install Wine (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run:   |
        sudo dpkg --add-architecture i386
        sudo apt-get -y update
        sudo apt-get -y install wine-stable

    - name: Install NSIS
      run: |
        curl -L https://downloads.sourceforge.net/project/nsis/NSIS%203/3.08/nsis-3.08-setup.exe -o /tmp/nsis-setup-$GITHUB_SHA.exe
        wine /tmp/nsis-setup-$GITHUB_SHA.exe /S
        wine regedit "${GITHUB_WORKSPACE}/.github/nsis.reg"
      env:
        WINEDEBUG: -all

    - name: Print NSIS version (macOS)
      if: matrix.os == 'macos-10.15'
      run: wine makensis /VERSION
      env:
        WINEDEBUG: -all

    - name: Print NSIS version (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: wine makensis /VERSION
      env:
        WINEDEBUG: -all

    - name: Print NSIS header info (macOS)
      if: matrix.os == 'macos-10.15'
      run: wine makensis /HDRINFO
      env:
        WINEDEBUG: -all

    - name: Print NSIS header info (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: wine makensis /HDRINFO
      env:
        WINEDEBUG: -all

    - name: Cache pnpm modules
      uses: actions/cache@v2
      with:
        path: ~/.pnpm-store
        key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-

    - uses: pnpm/action-setup@v2.0.1
      with:
        version: 6
        run_install: |
          - recursive: true
          - args: [--frozen-lockfile, --strict-peer-dependencies]

    - uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    - name: Lint Source
      run: pnpm run lint --if-present

    - name: Build Source
      run: pnpm run build --if-present

    - name: Run Tests
      run: pnpm run test --if-present
